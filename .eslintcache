[{"/Users/thomas.park/Documents/react_empty_app/src/index.js":"1","/Users/thomas.park/Documents/react_empty_app/src/App.js":"2","/Users/thomas.park/Documents/blockpool/src/index.js":"3","/Users/thomas.park/Documents/blockpool/src/App.js":"4","/Users/thomas.park/Documents/blockpool/src/components/Homepage.js":"5","/Users/thomas.park/Documents/blockpool/src/components/Bracket.js":"6","/Users/thomas.park/Documents/blockpool/src/components/WelcomePage.js":"7","/Users/thomas.park/Documents/blockpool/src/components/Home.js":"8","/Users/thomas.park/Documents/blockpool/src/components/MiniLeaderboard.js":"9","/Users/thomas.park/Documents/blockpool/src/components/AuthenticatedFetch.js":"10","/Users/thomas.park/Documents/blockpool/src/components/env.js":"11"},{"size":179,"mtime":1648532578000,"results":"12","hashOfConfig":"13"},{"size":111,"mtime":1670257034395,"results":"14","hashOfConfig":"13"},{"size":292,"mtime":1678674647311,"results":"15","hashOfConfig":"16"},{"size":381,"mtime":1678675365358,"results":"17","hashOfConfig":"16"},{"size":22722,"mtime":1678678480785,"results":"18","hashOfConfig":"16"},{"size":15095,"mtime":1678653983991,"results":"19","hashOfConfig":"16"},{"size":1733,"mtime":1678678528038,"results":"20","hashOfConfig":"16"},{"size":21284,"mtime":1678678591738,"results":"21","hashOfConfig":"16"},{"size":931,"mtime":1678677754494,"results":"22","hashOfConfig":"16"},{"size":1566,"mtime":1678678130315,"results":"23","hashOfConfig":"16"},{"size":125,"mtime":1678678500359,"results":"24","hashOfConfig":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d35657",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1qohyix",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thomas.park/Documents/react_empty_app/src/index.js",[],"/Users/thomas.park/Documents/react_empty_app/src/App.js",[],"/Users/thomas.park/Documents/blockpool/src/index.js",[],["50","51"],"/Users/thomas.park/Documents/blockpool/src/App.js",["52"],"import React from 'react';\nimport Homepage from './components/Homepage';\nimport { Routes, Route, useLocation } from \"react-router-dom\";\nimport WelcomePage from './components/WelcomePage';\n\nfunction App() {\n  return ( \n    <Routes>\n      <Route path=\"/home\" element={<Homepage />} />\n      <Route path=\"/\" element={<WelcomePage />} />\n    </Routes>\n    \n  );\n}\n\nexport default App;\n","/Users/thomas.park/Documents/blockpool/src/components/Homepage.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66"],"/Users/thomas.park/Documents/blockpool/src/components/Bracket.js",["67","68","69","70","71","72"],"import { SingleEliminationBracket, DoubleEliminationBracket, Match, SVGViewer, createTheme } from '@g-loot/react-tournament-brackets';\nimport React, { useState, useEffect } from 'react';\n\n\n\nfunction useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  \n    useEffect(() => {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n  \n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    return windowDimensions;\n  }\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n  }\n\nexport const SingleElimination = (props) => {\n\n    const [bracketList, setBracketList] = useState([]);\n    console.log(props.data)\n    const { height, width } = useWindowDimensions();\n    console.log(height, width);\n    const customTheme = createTheme({\n        textColor: { main: '#fafafa', highlighted: '#fafafa', dark: '#fafafa' },\n        matchBackground: { wonColor: 'green', lostColor: 'red' },\n        score: {\n          background: { wonColor: 'transparent', lostColor: 'transparent' },\n          text: { highlightedWonColor: '#fafafa', highlightedLostColor: '#fafafa' },\n        },\n        border: {\n          color: 'transparent',\n          highlightedColor: 'orange',\n        },\n        roundHeader: { backgroundColor: '#fafafa', fontColor: '#000' },\n        connectorColor: 'grey',\n        connectorColorHighlight: '#fafafa',\n        svgBackground: 'transparent',\n      });\n    \n    const matches = [\n        {\n            \"id\": 260010,\n            \"name\": \"Round 0 - Match 0\",\n            \"nextMatchId\": 260000,\n            \"tournamentRoundText\": \"1\",\n            \"startTime\": \"2021-05-30\",\n            \"state\": \"DONE\",\n            \"participants\": [\n                {\n                    \"id\": \"c016cb2a-fdd9-4c40-a81f-0cc6bdf4b9cc\",\n                    \"resultText\": \"WON\",\n                    \"isWinner\": true,\n                    \"status\": null,\n                    \"name\": \"giacomo123\"\n                },\n                {\n                    \"id\": \"9ea9ce1a-4794-4553-856c-9a3620c0531b\",\n                    \"resultText\": \"LOST\",\n                    \"isWinner\": false,\n                    \"status\": null,\n                    \"name\": \"giacomo122\"\n                }  \n            ]\n        },\n        {\n            \"id\": 260000,\n            \"name\": \"Round 1 - Match 1\",\n            \"nextMatchId\": 260001,\n            \"tournamentRoundText\": \"1\",\n            \"startTime\": \"2021-05-30\",\n            \"state\": \"DONE\",\n            \"participants\": [\n                {\n                    \"id\": \"c016cb2a-fdd9-4c40-a81f-0cc6bdf4b9cc\",\n                    \"resultText\": \"WON\",\n                    \"isWinner\": false,\n                    \"status\": null,\n                    \"name\": \"giacomo123\"\n                },\n                {\n                    \"id\": \"9ea9ce1a-4794-4553-856c-9a3620c0531b\",\n                    \"resultText\": null,\n                    \"isWinner\": true,\n                    \"status\": null,\n                    \"name\": \"giacomo122\"\n                }  \n            ]\n        },\n        {\n            \"id\": 260000,\n            \"name\": \"Round 1 - Match 1\",\n            \"nextMatchId\": 260001,\n            \"tournamentRoundText\": \"1\",\n            \"startTime\": \"2021-05-30\",\n            \"state\": \"DONE\",\n            \"participants\": [\n                {\n                    \"id\": \"c016cb2a-fdd9-4c40-a81f-0cc6bdf4b9cc\",\n                    \"resultText\": \"WON\",\n                    \"isWinner\": false,\n                    \"status\": null,\n                    \"name\": \"giacomo123\"\n                },\n                {\n                    \"id\": \"9ea9ce1a-4794-4553-856c-9a3620c0531b\",\n                    \"resultText\": null,\n                    \"isWinner\": true,\n                    \"status\": null,\n                    \"name\": \"giacomo122\"\n                }  \n            ]\n        },\n        {\n            \"id\": 260001,\n            \"name\": \"Round 2 - Match 2\",\n            \"nextMatchId\": 260005,\n            \"tournamentRoundText\": \"1\",\n            \"startTime\": \"2021-05-30\",\n            \"state\": \"DONE\",\n            \"participants\": [\n                {\n                    \"id\": \"c016cb2a-fdd9-4c40-a81f-0cc6bdf4b9cc\",\n                    \"resultText\": \"WON\",\n                    \"isWinner\": false,\n                    \"status\": null,\n                    \"name\": \"giacomo123\"\n                },\n                {\n                    \"id\": \"9ea9ce1a-4794-4553-856c-9a3620c0531b\",\n                    \"resultText\": null,\n                    \"isWinner\": true,\n                    \"status\": null,\n                    \"name\": \"giacomo122\"\n                }  \n            ]\n        },\n        {\n            \"id\": 260001,\n            \"name\": \"Round 2 - Match 2\",\n            \"nextMatchId\": 260005,\n            \"tournamentRoundText\": \"1\",\n            \"startTime\": \"2021-05-30\",\n            \"state\": \"DONE\",\n            \"participants\": [\n                {\n                    \"id\": \"c016cb2a-fdd9-4c40-a81f-0cc6bdf4b9cc\",\n                    \"resultText\": \"WON\",\n                    \"isWinner\": false,\n                    \"status\": null,\n                    \"name\": \"giacomo123\"\n                },\n                {\n                    \"id\": \"9ea9ce1a-4794-4553-856c-9a3620c0531b\",\n                    \"resultText\": null,\n                    \"isWinner\": true,\n                    \"status\": null,\n                    \"name\": \"giacomo122\"\n                }  \n            ]\n        }, \n        {\n            \"id\": 260005,\n            \"name\": \"Final - Match\",\n            \"nextMatchId\": null,\n            \"tournamentRoundText\": \"4\",\n            \"startTime\": \"2021-05-30\",\n            \"state\": \"DONE\",\n            \"participants\": [\n                {\n                    \"id\": \"c016cb2a-fdd9-4c40-a81f-0cc6bdf4b9cc\",\n                    \"resultText\": \"WON\",\n                    \"isWinner\": false,\n                    \"status\": null,\n                    \"name\": \"giacomo123\"\n                },\n                {\n                    \"id\": \"9ea9ce1a-4794-4553-856c-9a3620c0531b\",\n                    \"resultText\": null,\n                    \"isWinner\": true,\n                    \"status\": null,\n                    \"name\": \"giacomo122\"\n                }\n            ]\n        },\n    ]\n\n    //give me 68 unqiue schools\n    const collegesArr = [\"Alabama\", \"Arkansas\", \"Abilene Christian\", \"Arizona\", \"Baylor\", \"Clemson\", \"Colorado\", \"Creighton\", \"Drake\", \"Florida\", \"Florida State\", \"Georgetown\", \"Georgia Tech\", \"Gonzaga\", \"Grand Canyon\", \"Houston\", \"Illinois\", \"Iona\", \"Iowa\", \"Kansas\", \"Liberty\", \"Loyola Chicago\", \"LSU\", \"Maryland\", \"Michigan\", \"Michigan State\", \"Missouri\", \"Mount St. Mary's\", \"North Carolina\", \"North Texas\", \"Norfolk State\", \"Ohio State\", \"Oklahoma\", \"Oklahoma State\", \"Oregon\", \"Oregon State\", \"Purdue\", \"St. Bonaventure\", \"St. Mary's\", \"San Diego State\", \"Seton Hall\", \"South Dakota State\", \"Syracuse\", \"Texas\", \"Texas Southern\", \"Texas Tech\", \"UCLA\", \"UCSB\", \"UConn\", \"USC\", \"Utah State\", \"VCU\", \"Virginia\", \"Virginia Tech\", \"Wisconsin\", \"Winthrop\", \"West Virginia\", \"Western Kentucky\", \"Wichita State\", \"Xavier\", \"Yale\"];\n\n    const generateBracket = (colleges) => {\n        console.log(colleges)\n        if (colleges.length === 2) {\n            const match = {\n                \"id\": \"final\",\n                \"name\": \"Final - Match\",\n                \"nextMatchId\": null,\n                \"tournamentRoundText\": \"4\",\n                \"startTime\": \"2021-05-30\",\n                \"state\": \"DONE\",\n                \"participants\": [\n                    {\n                        \"id\": colleges[0],\n                        \"resultText\": \"LOST\",\n                        \"isWinner\": false,\n                        \"status\": null,\n                        \"name\": colleges[0]\n                    },\n                    {\n                        \"id\": colleges[1],\n                        \"resultText\": \"WON\",\n                        \"isWinner\": true,\n                        \"status\": null,\n                        \"name\": colleges[1]\n                    }\n                ]\n            }\n            setBracketList(...bracketList, match)\n            return true\n        }\n        else {\n            let bracket = []\n            for (let i = 0; i < colleges.length; i++) {\n                console.log(i)\n                const match = {\n                    \"id\": \"round1_\"+ (parseInt(i)+1),\n                    \"name\": \"Round 1 - Match 1\",\n                    \"nextMatchId\": \"round2_\"+ (Math.floor((i)/2)+1) ,\n                    \"tournamentRoundText\": \"1\",\n                    \"startTime\": \"2021-05-30\",\n                    \"state\": \"DONE\",\n                    \"participants\": [\n                        {\n                            \"id\": colleges[i],\n                            \"resultText\": \"LOST\",\n                            \"isWinner\": false,\n                            \"status\": null,\n                            \"name\": colleges[i]\n                        },\n                        {\n                            \"id\": colleges[i + 1],\n                            \"resultText\": \"WON\",\n                            \"isWinner\": true,\n                            \"status\": null,\n                            \"name\": colleges[i + 1]\n                        }\n                    ]\n                }\n                bracket.push(match)\n            }\n            console.log(bracket)\n            setBracketList(bracket)\n            //generateBracket(bracketList)\n        }   \n    }\n    //remove any duplicates\n    const simpleBracket = [\n        //68 teams\n        {\n            \"id\": \"1_1\",\n            \"name\": \"Round 1 - Match 1\",\n            \"nextMatchId\": \"2_1\",\n            \"tournamentRoundText\": \"1\",\n            \"startTime\": \"2021-05-30\",\n            \"state\": \"DONE\",\n            \"participants\": [\n                {\n                    \"id\": \"University of Texas at Arlington\",\n                    \"resultText\": \"WON\",\n                    \"isWinner\": false,\n                    \"status\": null,\n                    \"name\": \"University of Texas at Arlington\"\n                },\n                {\n                    \"id\": \"Baylor University\",\n                    \"resultText\": null,\n                    \"isWinner\": true,\n                    \"status\": null,\n                    \"name\": \"Baylor University\"\n                }\n            ]\n        },\n\n    ]\n\n    useEffect(() => {\n        //get the props.data\n        //create the next matches, and link them to the previous ones\n        //grab props.data and create the next matches\n\n        //update bracketList with the new matches\n        //const newBracketList = createNextMatches(props.data)\n        console.log(props.data)\n        //setBracketList(newBracketList)\n        //setBracketList(generateBracket(colleges))\n\n\n        //generateBracket(collegesArr)\n        console.log(bracketList)\n        \n\n    }, [])\n\n    const createNextMatches = (data) => {\n        //recursive function that takes a list, and returns a list with the next matches\n\n        //get the round from the first i in the list.id\n        const round = parseInt(data[0].id.split(\"_\")[0])\n        console.log(round)\n\n        if (round === 1) {\n            return false\n        }\n\n        if (data.length === 1) {\n            return false\n        }\n        console.log(data)\n        const roundMatches = []\n        for (let i = 1; i < data.length; i+=2) { //iterate by 2\n                //check if data has a winner == true, if not, return \"TBD\"\n                console.log(i)\n                const firstParticipants = data[i].participants\n                const secondParticipants = data[i-1].participants\n\n                //check who has the winner == true\n                let firstWinner = \"TBD\"\n                let secondWinner = \"TBD\"\n\n                for (let j = 0; j < firstParticipants.length; j++) {\n                    if (firstParticipants[j].isWinner === true) {\n                        firstWinner = firstParticipants[j].name\n                    }\n                }\n                \n                for (let j = 0; j < secondParticipants.length; j++) {\n                    if (secondParticipants[j].isWinner === true) {\n                        secondWinner = secondParticipants[j].name\n                    }\n                }\n\n                console.log(firstWinner, secondWinner)\n                const nextGame = {\n                    \"id\": (round/2) + \"_\" + (i/2),\n                    \"name\": \"Match \" + (round/2) + \" \" + (i/2), \n                    \"nextMatchId\": false,\n                    \"tournamentRoundText\": \"32\",\n                    \"startTIme\": \"March 30\",\n                    \"state\": \"DONE\",\n                    \"participants\": [\n                        {\n                            \"id\": firstWinner,\n                            \"resultText\": \"Won\",\n                            \"isWinner\": false,\n                            'status': null,\n                            \"name\": firstWinner,\n                        },\n                        {\n                            \"id\": secondWinner,\n                            \"resultText\": \"Lost\",\n                            \"isWinner\": false,\n                            'status': null,\n                            \"name\": secondWinner,\n                        }\n\n                    ]\n                }\n\n                //append to bracketList\n                roundMatches.push(nextGame)\n\n        }\n        console.log(roundMatches)\n        //push each match in roundMatches to setBracketList\n        for (let i = 0; i < roundMatches.length; i++) {\n            data.push(roundMatches[i])\n        }\n\n        createNextMatches(roundMatches)\n    }\n\n\n    return (\n        <>\n        {\n            //bracketList && bracketList.length > 0 && (\n                <SingleEliminationBracket\n                    matches={matches}\n                    theme={customTheme}\n                    matchComponent={Match}\n                    options={{\n                        style: {\n                        roundHeader: {\n                            backgroundColor: customTheme.roundHeader.backgroundColor,\n                            fontColor: customTheme.roundHeader.fontColor,\n                        },\n                        connectorColor: customTheme.connectorColor,\n                        connectorColorHighlight: customTheme.connectorColorHighlight,\n                        },\n                    }}\n                    svgWrapper={({ children, ...props }) => (\n                    <SVGViewer \n                        width={width-200} \n                        height={height-60} \n                        background={customTheme.svgBackground}\n                        SVGBackground={customTheme.svgBackground}\n                        {...props}>\n                        {children}\n                    </SVGViewer>\n                    )}\n        />\n            //)\n        }\n        </>\n        \n    )\n}\n\nexport default SingleElimination;\n\n\n  ","/Users/thomas.park/Documents/blockpool/src/components/WelcomePage.js",["73","74","75","76","77","78","79"],"/Users/thomas.park/Documents/blockpool/src/components/Home.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"/Users/thomas.park/Documents/blockpool/src/components/MiniLeaderboard.js",["102","103"],"/Users/thomas.park/Documents/blockpool/src/components/AuthenticatedFetch.js",[],"/Users/thomas.park/Documents/blockpool/src/components/env.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":3,"column":25,"nodeType":"110","messageId":"111","endLine":3,"endColumn":36},{"ruleId":"108","severity":1,"message":"112","line":14,"column":10,"nodeType":"110","messageId":"111","endLine":14,"endColumn":16},{"ruleId":"108","severity":1,"message":"113","line":14,"column":35,"nodeType":"110","messageId":"111","endLine":14,"endColumn":46},{"ruleId":"108","severity":1,"message":"114","line":14,"column":85,"nodeType":"110","messageId":"111","endLine":14,"endColumn":101},{"ruleId":"108","severity":1,"message":"115","line":14,"column":103,"nodeType":"110","messageId":"111","endLine":14,"endColumn":116},{"ruleId":"108","severity":1,"message":"116","line":28,"column":12,"nodeType":"110","messageId":"111","endLine":28,"endColumn":20},{"ruleId":"108","severity":1,"message":"117","line":29,"column":25,"nodeType":"110","messageId":"111","endLine":29,"endColumn":39},{"ruleId":"118","severity":1,"message":"119","line":162,"column":8,"nodeType":"120","endLine":162,"endColumn":10,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":248,"column":45,"nodeType":"124","endLine":248,"endColumn":62},{"ruleId":"122","severity":1,"message":"123","line":249,"column":45,"nodeType":"124","endLine":249,"endColumn":62},{"ruleId":"122","severity":1,"message":"123","line":250,"column":45,"nodeType":"124","endLine":250,"endColumn":62},{"ruleId":"122","severity":1,"message":"123","line":297,"column":45,"nodeType":"124","endLine":297,"endColumn":93},{"ruleId":"122","severity":1,"message":"123","line":310,"column":45,"nodeType":"124","endLine":310,"endColumn":93},{"ruleId":"122","severity":1,"message":"123","line":323,"column":45,"nodeType":"124","endLine":323,"endColumn":93},{"ruleId":"122","severity":1,"message":"123","line":346,"column":61,"nodeType":"124","endLine":346,"endColumn":99},{"ruleId":"108","severity":1,"message":"125","line":1,"column":36,"nodeType":"110","messageId":"111","endLine":1,"endColumn":60},{"ruleId":"108","severity":1,"message":"126","line":200,"column":11,"nodeType":"110","messageId":"111","endLine":200,"endColumn":22},{"ruleId":"108","severity":1,"message":"127","line":202,"column":11,"nodeType":"110","messageId":"111","endLine":202,"endColumn":26},{"ruleId":"108","severity":1,"message":"128","line":268,"column":11,"nodeType":"110","messageId":"111","endLine":268,"endColumn":24},{"ruleId":"118","severity":1,"message":"129","line":313,"column":8,"nodeType":"120","endLine":313,"endColumn":10,"suggestions":"130"},{"ruleId":"108","severity":1,"message":"131","line":315,"column":11,"nodeType":"110","messageId":"111","endLine":315,"endColumn":28},{"ruleId":"108","severity":1,"message":"132","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":20},{"ruleId":"108","severity":1,"message":"133","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":18},{"ruleId":"108","severity":1,"message":"134","line":7,"column":20,"nodeType":"110","messageId":"111","endLine":7,"endColumn":29},{"ruleId":"108","severity":1,"message":"135","line":9,"column":18,"nodeType":"110","messageId":"111","endLine":9,"endColumn":24},{"ruleId":"108","severity":1,"message":"136","line":9,"column":25,"nodeType":"110","messageId":"111","endLine":9,"endColumn":38},{"ruleId":"108","severity":1,"message":"137","line":9,"column":40,"nodeType":"110","messageId":"111","endLine":9,"endColumn":52},{"ruleId":"108","severity":1,"message":"138","line":9,"column":54,"nodeType":"110","messageId":"111","endLine":9,"endColumn":60},{"ruleId":"108","severity":1,"message":"139","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":10},{"ruleId":"108","severity":1,"message":"140","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":12},{"ruleId":"108","severity":1,"message":"112","line":13,"column":10,"nodeType":"110","messageId":"111","endLine":13,"endColumn":16},{"ruleId":"108","severity":1,"message":"141","line":13,"column":18,"nodeType":"110","messageId":"111","endLine":13,"endColumn":25},{"ruleId":"108","severity":1,"message":"135","line":13,"column":27,"nodeType":"110","messageId":"111","endLine":13,"endColumn":33},{"ruleId":"108","severity":1,"message":"136","line":13,"column":48,"nodeType":"110","messageId":"111","endLine":13,"endColumn":61},{"ruleId":"108","severity":1,"message":"137","line":13,"column":63,"nodeType":"110","messageId":"111","endLine":13,"endColumn":75},{"ruleId":"108","severity":1,"message":"138","line":13,"column":77,"nodeType":"110","messageId":"111","endLine":13,"endColumn":83},{"ruleId":"108","severity":1,"message":"142","line":13,"column":119,"nodeType":"110","messageId":"111","endLine":13,"endColumn":126},{"ruleId":"108","severity":1,"message":"134","line":14,"column":20,"nodeType":"110","messageId":"111","endLine":14,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":72,"column":50,"nodeType":"145","messageId":"146","endLine":72,"endColumn":52},{"ruleId":"143","severity":1,"message":"144","line":120,"column":30,"nodeType":"145","messageId":"146","endLine":120,"endColumn":32},{"ruleId":"108","severity":1,"message":"147","line":173,"column":15,"nodeType":"110","messageId":"111","endLine":173,"endColumn":20},{"ruleId":"108","severity":1,"message":"148","line":174,"column":15,"nodeType":"110","messageId":"111","endLine":174,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":244,"column":57,"nodeType":"124","endLine":244,"endColumn":74},{"ruleId":"122","severity":1,"message":"123","line":250,"column":57,"nodeType":"124","endLine":250,"endColumn":74},{"ruleId":"122","severity":1,"message":"123","line":256,"column":57,"nodeType":"124","endLine":256,"endColumn":74},{"ruleId":"122","severity":1,"message":"123","line":262,"column":57,"nodeType":"124","endLine":262,"endColumn":74},{"ruleId":"122","severity":1,"message":"123","line":279,"column":53,"nodeType":"124","endLine":279,"endColumn":77},{"ruleId":"122","severity":1,"message":"123","line":329,"column":89,"nodeType":"124","endLine":329,"endColumn":117},{"ruleId":"122","severity":1,"message":"123","line":343,"column":89,"nodeType":"124","endLine":343,"endColumn":116},{"ruleId":"122","severity":1,"message":"123","line":355,"column":89,"nodeType":"124","endLine":355,"endColumn":117},{"ruleId":"108","severity":1,"message":"133","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":18},{"ruleId":"108","severity":1,"message":"134","line":4,"column":20,"nodeType":"110","messageId":"111","endLine":4,"endColumn":29},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'faBars' is defined but never used.","'faArrowLeft' is defined but never used.","'faQuestionCircle' is defined but never used.","'faCheckCircle' is defined but never used.","'betsPage' is assigned a value but never used.","'setBracketList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'exampleLeaderboardData'. Either include it or remove the dependency array.","ArrayExpression",["151"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DoubleEliminationBracket' is defined but never used.","'collegesArr' is assigned a value but never used.","'generateBracket' is assigned a value but never used.","'simpleBracket' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bracketList' and 'props.data'. Either include them or remove the dependency array.",["152"],"'createNextMatches' is assigned a value but never used.","'MarchMadness' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'faCube' is defined but never used.","'faPeopleGroup' is defined but never used.","'faDollarSign' is defined but never used.","'faHome' is defined but never used.","'bc' is defined but never used.","'duke' is defined but never used.","'faCubes' is defined but never used.","'faCrown' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'match' is assigned a value but never used.","'newState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [exampleLeaderboardData]",{"range":"157","text":"158"},"Update the dependencies array to be: [bracketList, props.data]",{"range":"159","text":"160"},[4614,4616],"[exampleLeaderboardData]",[11023,11025],"[bracketList, props.data]"]